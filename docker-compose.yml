version: "3.3"

services:
    # Rasp gateway (Required: route request to skillsi, register device)
    device-gateway:
        image:  s8sg/device-gateway:1.0.0
        networks:
            - device
        ports:
            - 6107:6107
        environment:
            # Your daily Iot platform url
            DAILYIOT: "https://mydailyiot.platfomr.com"       
            # A global identification for the device (for example sha of the raspberry pi mac)
            DEVICEID: "00F88D2EF5FD6B452FBC9534C6AF5B25E2B950E61E7147D500EC14CC6FBE55D2"
            # Device address that is reachable from the platform
            DEVICEADDR: "http://mydiot.device1.com"
            # name of the skill that will be deployed
            SKILLS: "[\"switch\"]"
            # Auth token for registration
            DIOTTOKEN: "DA1LY-1OT"
            # URL for fass swarm
            # faas_swarm_url: "http://faas-swarm:8080/"
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 20
                window: 380s
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'
            resources:
                limits:
                    memory: 50M
#        secrets:
#            - DIOT_USER_TOKEN # It is used to register the device
                            

    # Docker Swarm provider (Required: install skills dynamically)
    faas-swarm:
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        # ports:
        #    - 8081:8080
        image:  functions/faas-swarm:0.2.7
        networks:
            - device
        environment:
            read_timeout:  "300s"   # set both here, and on your functions
            write_timeout: "300s"   # set both here, and on your functions
            DOCKER_API_VERSION: "1.30"
        deploy:
            mode: global
            placement:
                constraints:
                    - 'node.role == manager'
                    - 'node.platform.os == linux'
            resources:
                # limits:   # Enable if you want to limit memory usage
                #     memory: 100M
                reservations:
                     memory: 100M
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 20
                window: 380s

    # SKILLS : Skills that will run with the platform 
    #            > Skill can later be installed from dailyiot platform once the 
    #              device is registered
    #            > Comment the below section if you want to install seperately 
    # 
    # NOTE: 
    #  > Skill name is service name
    #  > There can be atmost 1 type of skill
    #  > There can be only one replica of a single skill
    
    switch:
        # Dummy Switch
        image: s8sg/skill-switch-dummy:1.0.0
        networks:
            - device
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 20
                window: 380s
        environment:
            # A list of GPIO pins based ordered on switch no.
            # i.e.
            # switch 1 -> gpio pin 2
            # switch 2 -> gpio pin 3
            # switch 4 -> gpio pin 17
            switch_pins: "[2, 3, 4, 17]"

networks:
    device:
        driver: overlay
        attachable: true
        labels:
          - "dailyiot=true"
